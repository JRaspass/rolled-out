#!/usr/bin/env perl

use v5.38;

use File::Find;
use JSON::XS;
use Path::Tiny;

# World images from https://docs.rolledoutgame.com/worlds.html resize with
# convert xxx.jpg -resize "200^>" -gravity center -crop 200x200+0+0 xxx.jpg
my @worlds = map { code => code($_), name => $_, slug => slug($_) }, (
    'Tranquility', 'Desert Ruins', 'Candy Factory', 'Foggy Mountains',
    'Virtual Reality', 'Ice Cave', 'Volcano', 'Haunted Grounds',
    'Heavenly Chamber', 'Desolation', 'Vortex',
);

my %bg2world = (
    BonusMap        => 0,
    SupernovaMap    => 0,
    GrassyHillsMap  => $worlds[0],  # Tranquility
    DesertTempleMap => $worlds[1],  # Desert Ruins
    CandyShopMap    => $worlds[2],  # Candy Factory
    GothicMap       => $worlds[3],  # Foggy Mountains
    VRMap           => $worlds[4],  # Virtual Reality
    IceCaveMap      => $worlds[5],  # Ice Cave
    VolcanoMap      => $worlds[6],  # Volcano
    SpookyMap       => $worlds[7],  # Haunted Grounds
    ExtraMap        => $worlds[8],  # Heavenly Chamber
    DesolationMap   => $worlds[9],  # Desolation
    MasterMap       => $worlds[10], # Vortex
);

my %skip = (
    # Tranquility / Scaling Test - Scoring not enabled.
    'e848dd7d-7efd-4d65-8300-6834830afdce' => 1,

    # Ice Cave / Keyholes - Not actually in the game?
    '0021375d-5893-48cc-8d9b-eeab5ce8e1be' => 1,
);

# Some timers are missing (or wrong!) in the config files.
my %timers = (
    '2a36b3f8-1b04-47ac-928c-2c8667d7d41d' => 60, # CF / Dissonant Gears
    '28615ea3-736e-4141-9f4a-5746b23e610f' => 60, # CF / Eye to Eye
    '0d66cb97-ee40-4eee-938b-3c9f4b52d967' => 60, # CF / Function
    'b9e4a71b-1941-4e46-8ea8-b577de0df425' => 60, # CF / Sugar Cones
    'e20725ac-da8a-48cc-8710-8e948de679a1' => 60, # CF / Tunnel Funnel
    '1a38e358-e530-4b9f-a20e-98306c5e0b42' => 60, # DR / Bump Jump
    'bcf02d63-88f3-47a8-95ef-2ce1dda400a6' => 60, # DR / Holey Ascension
    '32e968ba-f0fb-484b-82da-4274d10e9b83' => 60, # FM / Bubbles
    '103a2951-08db-4a65-a6b4-a242aef45890' => 60, # FM / Cross Peen
    '2d5a485d-d551-4699-ad79-0ddad156c446' => 60, # FM / Dream Catcher
    '8787487c-4ef0-4dea-bab0-2709e0932504' => 60, # FM / Dumbbell
    '82de5b4e-2e45-4467-9ba3-bbd4d4d352c1' => 60, # FM / Focus Fall
    'c0f55d69-89ac-428a-8aba-496fbe952678' => 60, # FM / Head On
    '8e1e5189-5cef-43e7-bf22-e44a0824bda8' => 60, # FM / Roulette
    '6f74c174-18a2-4bc2-81b2-0f79d5cf5fd6' => 60, # HC / Dipped Wires
    '2019895e-b14f-4443-b72c-45772b58296f' => 60, # HC / Ring Bump
    '8ecfe994-2ad4-4647-9346-efb71c830f0a' => 60, # HC / Trampoline Run
    '5c93d30a-9a1d-4d89-bf59-1081e19ae4d0' => 60, # HG / Elevators
    'ef7d0849-4c66-4aaa-88c9-635a38d9813c' => 60, # HG / Hidden Links
    '664533d7-8f61-4943-bce5-7505dcdba8f8' => 60, # HG / Slopeup
    'a1376f08-95dd-483f-8d9f-be177c08ef2c' => 60, # IC / Steering Wheel
    'e1fc9b7d-cef2-48bd-ae43-5b99598283a1' => 60, # VR / Attachment
    'aecf6fc7-0d80-42bf-a060-6a225edb3492' => 60, # VR / Coil
    '321b4dd3-3e29-475c-b1ba-1daa905a282f' => 60, # VR / Terminal Velocity
    '913a3aa7-105f-4974-8990-8ffb8bb60e9d' => 60, # VR / Wormholes
);

# Find all the stage config files in the Steam directory.
my @json;
find sub { push @json, path $File::Find::name if $_ eq 'config.json' },
    "$ENV{HOME}/.steam/steam/steamapps/common/rolledout/RolledOut/Content/Stages";

for my $json (@json) {
    my $conf = decode_json( $json->slurp );

    my $bg = $conf->{background_map};
    next unless my $world = $bg2world{$bg} // die "Can't find $bg\n";

    next if $skip{ $conf->{metadata}{uuid} };

    push $world->{stages}->@*, my $stage = {
        id   => $conf->{metadata}{uuid},
        name => $conf->{metadata}{name}{fallback},
        slug => slug( $conf->{metadata}{name}{fallback} ),
    };

    $stage->{timer} = ( $timers{ $stage->{id} } // $conf->{timer_seconds} ) * 1e9;

    say $stage->{name};

    my $png = $json->sibling('preview512.png');
    my $jpg = path("assets/img/$world->{slug}")->mkdir->child("$stage->{slug}.jpg");
    if ( $png->exists ) {
        system 'convert', $png, -'resize' => '200x200', $jpg and die $@;
    }
}

$_->{stages}->@* = sort { $a->{name} cmp $b->{name} } $_->{stages}->@*
    for @worlds;

path('model/worlds.json')->spew(
    JSON::XS->new->canonical->pretty->encode(\@worlds));

# Tranquility  → Tr
# Desert Ruins → DR
sub code($name) {
    return 'Vol' if $name eq 'Volcano';
    return 'Vor' if $name eq 'Vortex';

    return join( '', $name =~ /([A-Z]).+([A-Z])/ ) || $name =~ /(..)/;
}

# Tranquility  → tranquility
# Desert Ruins → desert-ruins
sub slug($name) {
    $name = lc $name;
    $name =~ s/&/and/g;
    $name =~ s/'//g;
    $name =~ s/\W+/-/g;
    $name =~ s/-$//;
    return $name;
}
